# Por SEXO
Data_ImputM %>%
group_by(sexo) %>%
summarise(
media = mean(edad, na.rm=TRUE),
mediana = median(edad, na.rm=TRUE),
sd = sd(edad, na.rm=TRUE),
minimo = min(edad, na.rm=TRUE),
maximo = max(edad, na.rm=TRUE),
rango = max(edad, na.rm=TRUE) - min(edad, na.rm=TRUE),
Q1 = quantile(edad, 0.25, na.rm=TRUE),
Q3 = quantile(edad, 0.75, na.rm=TRUE)
)
# Por SEXO
Data_ImputM %>%
group_by(genero) %>%
summarise(
media = mean(edad, na.rm=TRUE),
mediana = median(edad, na.rm=TRUE),
sd = sd(edad, na.rm=TRUE),
minimo = min(edad, na.rm=TRUE),
maximo = max(edad, na.rm=TRUE),
rango = max(edad, na.rm=TRUE) - min(edad, na.rm=TRUE),
Q1 = quantile(edad, 0.25, na.rm=TRUE),
Q3 = quantile(edad, 0.75, na.rm=TRUE)
)
# Por SEXO
Data_ImputM %>%
group_by(genero) %>%
summarise(
media = mean(edad),
mediana = median(edad),
sd = sd(edad),
minimo = min(edad),
maximo = max(edad),
rango = max(edad) - min(edad),
Q1 = quantile(edad, 0.25),
Q3 = quantile(edad, 0.75)
)
# Resumen por género
resumen_genero <- Data_ImputM %>%
group_by(genero) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
# Resumen por grado escolar
resumen_grado <- Data_ImputM %>%
group_by(grado) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
resumen_genero
View(resumen_genero)
view(resumen_grado)
# Resumen por grado escolar
resumen_grado <- Data_ImputM %>%
group_by(grado) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
view(resumen_grado)
# Resumen por grado escolar
resumen_grado <- Data_ImputM %>%
group_by(grado) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
view(resumen_grado)
View(resumen_grado)
# Resumen por zona
resumen_zona <- Data_ImputM %>%
group_by(zona) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
View(resumen_zona)
library(easypackages)
lib_req <- c("lubridate",
"dplyr",
"visdat",
"missMDA",
"mice",
"DMwR2",
"editrules",
"corrplot",
"ggplot2",
"here",
"skimr")
easypackages::packages(lib_req)
Data <- read.table(here("Data","BD_huella.txt"), header = TRUE, sep = "\t")
View(Data)
table(Data$genero)
table(Data$zona)
table(Data$grado)
table(Data$comp_HHD)
table(Data$comp_HHI)
# Declaración de niveles correctos para las variables tipo Factor
level_genero <- c("1" = 1,
"2" = 2,
femenino = 1,
Femenino = 1,
FEMENINO = 1,
masculino = 2,
Masculino = 2,
MASCULINO = 2
)
level_zona <- c("1" = 1,
"2"= 2,
Urbano = 1,
URBANO = 1,
Rural= 2,
RURAL= 2
)
level_grado <- c("6" = 6,
"7" = 7,
"8" = 8,
"9" = 9,
"10" = 10,
"11" = 11,
sexto = 6,
SEXTO = 6,
septimo = 7,
SEPTIMO = 7,
octavo = 8,
OCTAVO = 8,
noveno = 9,
NOVENO = 9,
decimo = 10,
DECIMO = 10,
once = 11,
ONCE = 11
)
level_comp_HHD <- c(Lavado.ropa = "Lavado.ropa",
Riego.jardin = "Riego.jardin",
Uso.baño = "Uso.baño",
USO.BAÑO = "Uso.baño",
Uso_baño = "Uso.baño",
Uso.cocina = "Uso.cocina")
level_comp_HHI <- c(Café = "Café",
CAFÉ = "Café",
Carne = "Carne",
CARNE = "Carne",
Fruta = "Frutas")
## Modificación del formato y transformación de variables
Data <- transform(Data,
genero=factor(dplyr::recode(genero, !!!level_genero)),
zona=factor(dplyr::recode(zona, !!!level_zona)),
grado = factor(dplyr::recode(grado,!!!level_grado)),
comp_HHD = factor(dplyr::recode(comp_HHD, !!!level_comp_HHD)),
comp_HHI = factor(dplyr::recode(comp_HHI, !!!level_comp_HHI)))
table(Data$genero)
table(Data$zona)
table(Data$grado)
table(Data$comp_HHD)
str(Data)
table(Data$comp_HHI)
Rules <- editrules::editfile("consistencia.txt")
View(Rules)
Rules
plot(Rules)
summary(Valid_Data)
Valid_Data = editrules::violatedEdits(Rules,Data)
Valid_Data
summary(Valid_Data)
Valid_Data
summary(Valid_Data)
which(Valid_Data)
matrix(data=1:55, 5, 11)
windows()
plot(Valid_Data)
is.na(Data) # Creamos una matriz con los datos faltantes
visdat::vis_miss(Data) # Visualizamos en grafico los datos faltantes
return(invisible(lista))
Summary.NA = miss(Data)
miss<-function(Data,plot=T){
n=nrow(Data);p=ncol(Data)
names.obs<-rownames(Data)
nobs.comp=sum(complete.cases(Data))         # Cuenta los registros completos
Obs.comp=which(complete.cases(Data))        # Identifica los registros completos
nobs.miss = sum(!complete.cases(Data))      # Identifica los registros con datos faltantes.
Obs.miss=which(!complete.cases(Data))       # Identifica los registros con datos faltantes.
Data.NA<-is.na(Data)
Var_Num<- sort(colSums(Data.NA),decreasing=T)
Var_per<-round(Var_Num/n,3)
Obs_Num<-rowSums(Data.NA)
names(Obs_Num)<-names.obs
Obs_Num<-sort(Obs_Num,decreasing=T)
Obs_per<-round(Obs_Num/p,3)
lista<-list(n.row = n, n.col = p,n.comp = nobs.comp,Obs.comp = Obs.comp,n.miss = nobs.miss,Obs.miss = Obs.miss, Var.n = Var_Num , Var.p = Var_per, Obs.n= Obs_Num, Obs.per= Obs_per)
if(plot){
windows(height=10,width=15)
par(mfrow=c(1,2))
coord<-barplot(Var_per,plot=F)
barplot(Var_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por variable", col="blue")
axis(2,at=coord,labels=names(Var_per), cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2),pos=0)
coord<-barplot(Obs_per,plot=F)
barplot(Obs_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por registro", col="green")
axis(2,at=coord,labels=names(Obs_per),cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2))
}
return(invisible(lista))
}
Summary.NA = miss(Data)
x11()
par(mfrow=c(3,1))
with(Data,{
hist(HHD,freq=F,col="blue",breaks=13)
boxplot(HHD,horizontal=T,col="blue")
hist(scale(HHD),freq=F,col="blue",breaks=13)
}
)
x11()
par(mfrow=c(3,1))
with(Data,{
hist(HHI,freq=F,col="blue",breaks=13)
boxplot(HHI,horizontal=T,col="blue")
hist(scale(HHI),freq=F,col="blue",breaks=13)
}
)
x11()
par(mfrow=c(2,1))
with(Data,{
barplot(per.hog,freq=F,col="blue",breaks=13)
boxplot(per.hog,horizontal=T,col="blue")
}
)
# Identificar datos atipicos
id.out.uni=function(x,method=c("Standarized","Tukey","Cook")){
id.out=NULL
if(method=="Standarized"){id.out=which(abs(scale(x))>3)}
else if(method=="Tukey"){id.out=which(x%in%(boxplot.stats(x)$out))}
else if(method=="Cook"){model=lm(x~1);CD=cooks.distance(model)
id.out=unname(which(CD>4*mean(CD)))}
return(id.out)
}
id.out.uni(Data$HHD,method="Standarized")
id.out.uni(Data$HHD,method="Tukey")
id.out.uni(Data$HHD,method="Cook")
# HHI
id.out.uni(Data$HHI,method="Standarized")
id.out.uni(Data$HHI,method="Tukey")
id.out.uni(Data$HHI,method="Cook")
# per.hog
id.out.uni(Data$per.hog,method="Standarized")
id.out.uni(Data$per.hog,method="Tukey")
id.out.uni(Data$per.hog,method="Cook")
View(Data)
Data_ImputM = mice::complete(imputM)
imputM = mice::mice(Data, method = "mean")
Data_ImputM = mice::complete(imputM)
View(Data_ImputM)
write.table(setdiff(Data_ImputM, Data), "ReporteCambios.txt", sep="\t", row.names=FALSE)
# Guárdela en un archivo nuevo clean_huella.txt
write.table(Data_ImputM, file = "clean_huella.txt", sep = "\t", row.names = FALSE, quote = FALSE)
Data_ImputM$HHT <- Data_ImputM$HHD + Data_ImputM$HHI
Data_ImputM$HHT_clas <- cut(
Data_ImputM$HHT,
breaks = c(-Inf, 1789, 1800, 1887, Inf),
labels = c("bajo", "medio", "alto")
)
# Clasificación
Data_ImputM$HHT_clas <- cut(
Data_ImputM$HHT,
breaks = c(-Inf, 1789, 1800, 1887, Inf),
labels = c("bajo", "medio", mediomediocito, "alto")
)
# Clasificación
Data_ImputM$HHT_clas <- cut(
Data_ImputM$HHT,
breaks = c(-Inf, 1789, 1800, 1887, Inf),
labels = c("bajo", "medio", "mediomediocito", "alto")
)
# Clasificación
Data_ImputM$HHT_clas <- cut(
Data_ImputM$HHT,
breaks = c(-Inf, 1789, 1887, Inf),
labels = c("bajo", "medio", "alto")
)
x11()
par(mfrow = c(3, 1))
# 1. Distribución de HHT_clas
barplot(table(Data_ImputM$HHT_clas),
main = "Clasificación de la Huella Hídrica Total",
col = "skyblue",
xlab = "Clasificación", ylab = "Frecuencia")
# 2. Componente de la HHD
barplot(table(Data_ImputM$comp_HHD),
main = "Componente de la Huella Hídrica Directa",
col = "salmon",
xlab = "Componente", ylab = "Frecuencia")
# 3. Componente de la HHI
barplot(table(Data_ImputM$comp_HHI),
main = "Componente de la Huella Hídrica Indirecta",
col = "lightgreen",
xlab = "Componente", ylab = "Frecuencia")
x11()
par(mfrow = c(3, 1))
# 1. Distribución de HHT_clas
barplot(table(Data_ImputM$HHT_clas),
main = "Clasificación de la Huella Hídrica Total",
col = "skyblue",
xlab = "Clasificación", ylab = "Frecuencia")
# 2. Componente de la HHD
barplot(table(Data_ImputM$comp_HHD),
main = "Componente de la Huella Hídrica Directa",
col = "salmon",
xlab = "Componente", ylab = "Frecuencia")
# 3. Componente de la HHI
barplot(table(Data_ImputM$comp_HHI),
main = "Componente de la Huella Hídrica Indirecta",
col = "lightgreen",
xlab = "Componente", ylab = "Frecuencia")
x11()
par(mfrow = c(3, 1))
# 1. Distribución de HHT_clas
barplot(table(Data_ImputM$HHT_clas),
main = "Clasificación de la Huella Hídrica Total",
col = "skyblue",
xlab = "Clasificación", ylab = "Frecuencia")
# 2. Componente de la HHD
barplot(table(Data_ImputM$comp_HHD),
main = "Componente de la Huella Hídrica Directa",
col = "salmon",
xlab = "Componente", ylab = "Frecuencia")
x11(width = 12, height = 10)
# Configurar 3 filas x 2 columnas y márgenes más amplios abajo
par(mfrow = c(3, 2), mar = c(6, 4, 4, 2) + 0.1)
# 1. HHD por Sexo
boxplot(HHD ~ genero, data = Data_ImputM,
main = "HHD por Sexo",
col = "lightblue",
xlab = "Sexo : 1. Femenino, 2. Masculino", ylab = "HHD",
las = 1)
# 2. HHI por Sexo
boxplot(HHI ~ genero, data = Data_ImputM,
main = "HHI por Sexo",
col = "lightblue",
xlab = "Sexo : 1. Femenino, 2. Masculino", ylab = "HHI",
las = 1)
# 3. HHD por Grado Escolar
boxplot(HHD ~ grado, data = Data_ImputM,
main = "HHD por Grado Escolar",
col = "lightgreen",
xlab = "Grado : 6. Sexto, 7. Septimo, 8. Octavo, 9. Noveno, 10. Decimo, 11.Once", ylab = "HHD",
las = 2)  # Texto vertical para mejor ajuste
# 4. HHI por Grado Escolar
boxplot(HHI ~ grado, data = Data_ImputM,
main = "HHI por Grado Escolar",
col = "lightgreen",
xlab = "Grado : 6. Sexto, 7. Septimo, 8. Octavo, 9. Noveno, 10. Decimo, 11.Once", ylab = "HHI",
las = 2)
# 5. HHD por Zona
boxplot(HHD ~ zona, data = Data_ImputM,
main = "HHD por Zona",
col = "orange",
xlab = "Zona: 1. Urbana, 2. Rural", ylab = "HHD",
las = 1)
# 6. HHI por Zona
boxplot(HHI ~ zona, data = Data_ImputM,
main = "HHI por Zona",
col = "orange",
xlab = "Zona: 1. Urbana, 2. Rural", ylab = "HHI",
las = 1)
x11(width = 12, height = 10)
# Configurar 3 filas x 2 columnas y márgenes más amplios abajo
par(mfrow = c(3, 2), mar = c(6, 4, 4, 2) + 0.1)
# 1. HHD por Sexo
boxplot(HHD ~ genero, data = Data_ImputM,
main = "HHD por Sexo",
col = "yellow",
xlab = "Sexo : 1. Femenino, 2. Masculino", ylab = "HHD",
las = 1)
# 2. HHI por Sexo
boxplot(HHI ~ genero, data = Data_ImputM,
main = "HHI por Sexo",
col = "yellow",
xlab = "Sexo : 1. Femenino, 2. Masculino", ylab = "HHI",
las = 1)
# 3. HHD por Grado Escolar
boxplot(HHD ~ grado, data = Data_ImputM,
main = "HHD por Grado Escolar",
col = "blue",
xlab = "Grado : 6. Sexto, 7. Septimo, 8. Octavo, 9. Noveno, 10. Decimo, 11.Once", ylab = "HHD",
las = 2)  # Texto vertical para mejor ajuste
# 4. HHI por Grado Escolar
boxplot(HHI ~ grado, data = Data_ImputM,
main = "HHI por Grado Escolar",
col = "blue",
xlab = "Grado : 6. Sexto, 7. Septimo, 8. Octavo, 9. Noveno, 10. Decimo, 11.Once", ylab = "HHI",
las = 2)
# 5. HHD por Zona
boxplot(HHD ~ zona, data = Data_ImputM,
main = "HHD por Zona",
col = "red",
xlab = "Zona: 1. Urbana, 2. Rural", ylab = "HHD",
las = 1)
# 6. HHI por Zona
boxplot(HHI ~ zona, data = Data_ImputM,
main = "HHI por Zona",
col = "red",
xlab = "Zona: 1. Urbana, 2. Rural", ylab = "HHI",
las = 1)
# Resumen por género
resumen_genero <- Data_ImputM %>%
group_by(genero) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
View(resumen_genero)
# Resumen por grado escolar
resumen_grado <- Data_ImputM %>%
group_by(grado) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
View(resumen_grado)
# Resumen por zona
resumen_zona <- Data_ImputM %>%
group_by(zona) %>%
summarise(
edad_media = mean(edad, na.rm = TRUE),
edad_mediana = median(edad, na.rm = TRUE),
edad_sd = sd(edad, na.rm = TRUE),
HHD_media = mean(HHD, na.rm = TRUE),
HHD_mediana = median(HHD, na.rm = TRUE),
HHD_sd = sd(HHD, na.rm = TRUE),
HHI_media = mean(HHI, na.rm = TRUE),
HHI_mediana = median(HHI, na.rm = TRUE),
HHI_sd = sd(HHI, na.rm = TRUE),
per_hog_media = mean(per.hog, na.rm = TRUE),
per_hog_mediana = median(per.hog, na.rm = TRUE),
per_hog_sd = sd(per.hog, na.rm = TRUE)
)
View(resumen_zona)
